{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","actions/ui.js","components/ui/Navbar.js","helpers/prepareEvents.js","actions/events.js","components/calendar/CalendarModal.js","components/calendar/CalendarEvent.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","event","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchWithoutToken","endPoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","checkingFinish","login","user","logout","startEventClean","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","loginEmail","loginPassword","formLoginValues","handleLoginInputChange","registerEmail","registerPassword1","registerPassword2","registerName","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","response","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","uiOpenModal","Navbar","useSelector","onClick","clear","prepareEvents","end","moment","toDate","start","eventAddNew","eventSetActive","eventClearActiveEvent","eventDeleted","eventUpdated","eventLoaded","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","title","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","validTitle","setValidTitle","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","console","error","trim","length","getState","_id","log","eventStartAddNew","minDate","autoComplete","rows","CalendarEvent","AddNewFab","DeleteEventFab","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","height","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","components","PublicRoute","isLoggedIn","children","to","PrivateRoute","AppRouter","path","element","replace","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9319202.chunk.js","sourcesContent":["export const types = {\r\n    uiOpenModal: '[UI] Open Modal',\r\n    uiCloseModal: '[UI] Close Modal',\r\n\r\n    eventSetActive: '[Event] Set active',\r\n    eventAddNew: '[Event] Add new',\r\n    eventStartAddNew: '[Event] Start Add new',\r\n    eventClearActiveEvent: '[Event] Clear active event',\r\n    eventUpdated: '[Event] Event updated',\r\n    eventDeleted: '[Event] Event deleted',\r\n    eventLoaded: '[Event] Events loaded',\r\n    eventClear: '[Event] Events cleaning',\r\n\r\n    authCheckingFinish: '[Auth] Finish checking login state',\r\n    authStartLogin: '[Auth] Start login',\r\n    authLogin: '[Auth] Login',\r\n    authStartRegister: '[Auth] Start register',\r\n    authStartTokenRenew: '[Auth] Start token renew',\r\n    authLogout: '[Auth] Logout'\r\n};","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n};\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n    switch ( action?.type ) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            };\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            };\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Boss birthday',\r\n//     start: moment().toDate(), // new Date()\r\n//     end: moment().add( 2, 'hours' ).toDate(),\r\n//     bgColor: '#fafafa',\r\n//     notes: 'Buy cake',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Jose'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n    switch ( action?.type ) {\r\n\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            };\r\n            \r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            };\r\n            \r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            };\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map( event => event.id === action.payload.id ? action.payload : event )\r\n            };\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter( event => event.id !== state.activeEvent.id ),\r\n                activeEvent: null\r\n            };\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            };\r\n\r\n        case types.eventClear:\r\n            return {\r\n                ...initialState\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n};\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n    switch ( action?.type ) {\r\n\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            };\r\n            \r\n        default: \r\n            return state;\r\n    };\r\n};","import { combineReducers } from 'redux'\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchWithoutToken = ( endPoint, data, method = 'GET' ) => {\r\n    const url = `${ baseUrl }/${ endPoint }`; // localhost:3001/api/\r\n    if( method === 'GET' ){\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n};\r\n\r\nconst fetchWithToken = ( endPoint, data, method = 'GET' ) => {\r\n    const url = `${ baseUrl }/${ endPoint }`; // localhost:3001/api/\r\n    const token = localStorage.getItem( 'token' ) || '';\r\n\r\n    if( method === 'GET' ){\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        } );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n};\r\n\r\nexport {\r\n    fetchWithoutToken,\r\n    fetchWithToken\r\n};","import { types } from \"../types/types\";\r\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\";\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async dispatch => {\r\n        const response = await fetchWithoutToken( 'auth', { email, password }, 'POST' );\r\n        const body = await response.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error' );\r\n        }\r\n    };\r\n};\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async dispatch => {\r\n        const response = await fetchWithoutToken( 'auth/new', { name, email, password }, 'POST' );\r\n        const body = await response.json();\r\n\r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );            \r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name\r\n            }) );\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error' );\r\n        }\r\n    };\r\n};\r\n\r\nexport const startChecking = () => {\r\n    return async dispatch => {\r\n        const response = await fetchWithToken( 'auth/renew' );\r\n        const body = await response.json();\r\n\r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );            \r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n    };\r\n};\r\n\r\nexport const checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nexport const login = user => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\n/**\r\n * \r\n * @see Must be async because these response will affect the auth uid changes,\r\n * so the useEffect will rerender the AppRouter again (Redirect to login) \r\n */\r\nexport const startLogout = () => {\r\n    return dispatch => {\r\n        localStorage.clear();\r\n        dispatch( startEventClean() );\r\n        dispatch( logout() );\r\n    };\r\n};\r\n\r\nexport const logout = () => ({ type: types.authLogout });\r\nexport const startEventClean = () => ({ type: types.eventClear });","import { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => setValues( initialState );\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n    }\r\n    return [ values, handleInputChange, reset ];\r\n}","import { useForm } from '../../hooks/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport './login.css';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        loginEmail: 'sergio@demo.com',\r\n        loginPassword: '123456'\r\n    });\r\n    \r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        registerEmail: 'sofi@demo.com',\r\n        registerPassword1: '123456',\r\n        registerPassword2: '123456',\r\n        registerName: 'Sofía'\r\n    });\r\n\r\n    const { loginEmail, loginPassword } = formLoginValues;\r\n    const { registerEmail, registerPassword1, registerPassword2, registerName } = formRegisterValues;\r\n\r\n    const handleLogin = e => {\r\n        e.preventDefault();\r\n\r\n        // TODO: Client/Server validations\r\n        dispatch( startLogin( loginEmail, loginPassword ) );\r\n    }\r\n\r\n    const handleRegister = e => {\r\n        e.preventDefault();\r\n\r\n        if( registerPassword1 !== registerPassword2 ) return Swal.fire( 'Error', 'The passwords must be the same', 'error' );\r\n\r\n        // TODO: Client validations\r\n        dispatch( startRegister( registerEmail, registerPassword1, registerName ) );\r\n    };\r\n \r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Login</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                name=\"loginEmail\"\r\n                                value={ loginEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                name=\"loginPassword\"\r\n                                value={ loginPassword }\r\n                                onChange={ handleLoginInputChange }                                \r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Register</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"name\"\r\n                                name=\"registerName\"\r\n                                value={ registerName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                name=\"registerEmail\"\r\n                                value={ registerEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                name=\"registerPassword1\"\r\n                                value={ registerPassword1 }\r\n                                onChange={ handleRegisterInputChange } \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Type again the password\"\r\n                                name=\"registerPassword2\"\r\n                                value={ registerPassword2 }\r\n                                onChange={ handleRegisterInputChange } \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Create account\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal }); \r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { name } = useSelector( state => state.auth );\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    };\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand ms-3\">\r\n                { name }\r\n            </span>\r\n            <button className=\"btn btn-outline-danger me-3\"\r\n                    onClick={ handleLogout }>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Exit</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import moment from 'moment';\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n    return events.map( event => ({\r\n        ...event,\r\n        end: moment( event.end ).toDate(),\r\n        start: moment( event.start ).toDate()\r\n    }));\r\n};","import Swal from \"sweetalert2\";\r\n\r\nimport { fetchWithToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const eventStartAddNew = event => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            \r\n            const response = await fetchWithToken( 'events', event, 'POST' );\r\n            const body = await response.json();\r\n\r\n            if( body.ok ) {\r\n                \r\n                event.id = body.event.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                };\r\n                console.log( event );\r\n                dispatch( eventAddNew( event ) );\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n\r\n    };\r\n};\r\n\r\nconst eventAddNew = event => ({ \r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = event => ({ \r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\r\n\r\nexport const eventStartDelete = () => {\r\n    return async ( dispatch, getState ) => {\r\n        const { id } = getState().calendar.activeEvent;\r\n        try {\r\n            const response = await fetchWithToken( `events/${ id }`, {}, 'DELETE' );\r\n            const body = await response.json();\r\n            if ( body.ok ) {\r\n                dispatch( eventDeleted() );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error' );\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n};\r\nconst eventDeleted = () => ({ type: types.eventDeleted });\r\n\r\nexport const eventStartUpdated = event => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await fetchWithToken( `events/${ event.id }`, event, 'PUT' );\r\n            const body = await response.json();\r\n            if ( body.ok ) {\r\n                dispatch( eventUpdated( event ) );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error' );\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n};\r\n\r\nconst eventUpdated = event => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async dispatch => {\r\n        \r\n        try {\r\n            const response = await fetchWithToken( 'events' );\r\n            const body = await response.json();\r\n\r\n            const events = prepareEvents( body.events );\r\n            dispatch( eventLoaded( events ) ); // Could broke the app the incoming date format\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n};\r\n\r\nconst eventLoaded = events => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});","import Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport { useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdated } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add( 1, 'hours' );\r\nconst nowPlus1 = now.clone().add( 1, 'hours' );\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { modalOpen } = useSelector( state => state.ui );\r\n    const { activeEvent } = useSelector( state => state.calendar );\r\n\r\n    const [ dateStart, setDateStart] = useState( now.toDate() );\r\n    const [ dateEnd, setDateEnd]     = useState( nowPlus1.toDate() );\r\n    const [ validTitle, setValidTitle] = useState(true);\r\n\r\n\r\n    const [ formValues, setFormValues] = useState( initEvent );\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if( activeEvent ) {\r\n            setFormValues( activeEvent );\r\n        } else {\r\n            setFormValues( initEvent );\r\n        }\r\n    }, [ activeEvent, setFormValues ]);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setFormValues( initEvent );\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActiveEvent() );\r\n    }\r\n\r\n    const handleStartDateChange = e => {\r\n        setDateStart( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    };\r\n\r\n    const handleEndDateChange = e => {\r\n        setDateEnd( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });        \r\n    };\r\n\r\n    const handleSubmitForm = e => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n        \r\n        if( momentStart.isSameOrAfter( momentEnd ) ){\r\n            Swal.fire( 'Error', 'The end date must be lower than the start date', 'error' );\r\n            console.error('The end date must be lower than the start date.');\r\n            return;\r\n        }\r\n\r\n        if( title.trim().length < 2 ) return setValidTitle(false);\r\n\r\n        if( activeEvent ) {\r\n            dispatch( eventStartUpdated( formValues ) );\r\n        } else {\r\n            dispatch( eventStartAddNew( formValues ) );\r\n        }\r\n\r\n\r\n        setValidTitle(true);\r\n        closeModal();\r\n    };\r\n\r\n    return (\r\n        <Modal \r\n            isOpen={ modalOpen }\r\n            // onAfterOpen={afterOpenModal}\r\n            onRequestClose={ closeModal }\r\n            style={ customStyles }\r\n            closeTimeoutMS={ 200 }\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\">\r\n\r\n                <h1> { activeEvent ? 'Edit event' : 'New event' } </h1>\r\n                <hr />\r\n                <form className=\"container\"\r\n                      onSubmit={ handleSubmitForm }>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Fecha y hora inicio</label>\r\n                        <DateTimePicker onChange={ handleStartDateChange } value={ dateStart } className=\"form-control\"/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Fecha y hora fin</label>\r\n                        <DateTimePicker onChange={ handleEndDateChange } \r\n                                        value={ dateEnd } \r\n                                        minDate={ dateStart }\r\n                                        className=\"form-control\"/>\r\n                    </div>\r\n\r\n                    <hr />\r\n                    <div className=\"form-group\">\r\n                        <label>Titulo y notas</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className={ `form-control ${ ! validTitle && 'is-invalid' }` }\r\n                            placeholder=\"Título del evento\"\r\n                            name=\"title\"\r\n                            autoComplete=\"off\"\r\n                            value={ title }\r\n                            onChange={ handleInputChange }\r\n                        />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <textarea \r\n                            type=\"text\" \r\n                            className=\"form-control\"\r\n                            placeholder=\"Notas\"\r\n                            rows=\"5\"\r\n                            name=\"notes\"\r\n                            value={ notes }\r\n                            onChange={ handleInputChange }                            \r\n                        ></textarea>\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                    </div>\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-outline-primary btn-block\"\r\n                    >\r\n                        <i className=\"far fa-save\"></i>\r\n                        <span> Guardar</span>\r\n                    </button>\r\n\r\n                </form>\r\n        </Modal>\r\n    );\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    \r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong> { title } </strong>\r\n            <span>- { user.name } </span>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch( uiOpenModal() );\r\n    };\r\n    \r\n    return (\r\n        <button className=\"btn btn-primary fab\"\r\n                onClick={ handleClickNew }>\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\nimport { eventStartDelete } from \"../../actions/events\";\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() );\r\n    };\r\n\r\n    return (\r\n        <button className=\"btn btn-danger fab-danger\"\r\n                onClick={ handleDelete }>\r\n            <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n    );\r\n};","import moment from 'moment';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { CalendarEvent } from './CalendarEvent';\r\n\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector( state => state.calendar );\r\n    const { uid } = useSelector(state => state.auth );\r\n\r\n    const [ lastView, setLastView ] = useState( localStorage.getItem('lastView') ||'month' );\r\n\r\n    /**\r\n     * \r\n     * Loading events from DB\r\n     */\r\n    useEffect(() => {\r\n        dispatch( eventStartLoading() );\r\n    }, [ dispatch ]);\r\n\r\n    /**\r\n     * \r\n     * Close modal\r\n     * @param {SyntheticEvent} e \r\n     */\r\n    const onDoubleClick = e => {\r\n        dispatch( uiOpenModal() );\r\n        dispatch( eventSetActive( e ) );        \r\n    };\r\n\r\n    const onSelectEvent = e => {\r\n        dispatch( eventSetActive( e ) );\r\n    };\r\n\r\n    const onViewChange = e => {\r\n        setLastView( e );\r\n        localStorage.setItem('lastView', e );\r\n    };\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n        const style = {\r\n            backgroundColor: uid === event.user._id ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: '0.8',\r\n            display: 'block',\r\n            color: '#FFFFFF',\r\n        };\r\n        return { style };\r\n    };\r\n\r\n    const onSelectSlot = e => {\r\n        dispatch( eventClearActiveEvent() );\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            <Calendar localizer={localizer}\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                style={{ height: 500 }} \r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                view={ lastView }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}/>\r\n\r\n            <AddNewFab />\r\n            { activeEvent && <DeleteEventFab /> }\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n};","import { Navigate } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({ isLoggedIn, children }) => {\r\n  return ! isLoggedIn ? children : <Navigate to=\"/\" />;\r\n};","import { Navigate } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({ isLoggedIn, children }) => {\r\n  return isLoggedIn ? children : <Navigate to=\"/login\" />;\r\n};","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route,\r\n    Navigate\r\n  } from \"react-router-dom\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth );\r\n\r\n    useEffect(() => {\r\n        dispatch( startChecking() );\r\n    }, [ dispatch ]);\r\n\r\n    if( checking ) {\r\n        return <h5>Wait a second...</h5>;\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <Routes>\r\n            <Route path=\"/login\" element={ \r\n                <PublicRoute isLoggedIn={ !! uid }>\r\n                    <LoginScreen /> \r\n                </PublicRoute>\r\n            }></Route>\r\n            <Route path=\"/\" element={ \r\n                <PrivateRoute isLoggedIn={ !! uid }>\r\n                    <CalendarScreen />\r\n                </PrivateRoute>\r\n            }></Route>\r\n            <Route path=\"*\" element={ <Navigate replace to=\"/\"/> }></Route>\r\n        </Routes>\r\n    </Router>\r\n    )\r\n};","import { store } from './store/store';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}